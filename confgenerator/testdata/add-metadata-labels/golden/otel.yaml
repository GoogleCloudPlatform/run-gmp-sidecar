exporters:
  googlemanagedprometheus:
    metric:
      add_metric_suffixes: false
    user_agent: Google-Cloud-Run-GMP-Sidecar/latest; ShortName=run-gmp;ShortVersion=latest
processors:
  filter/run-gmp-self-metrics_0:
    metrics:
      include:
        match_type: strict
        metric_names:
        - otelcol_process_uptime
        - otelcol_process_memory_rss
        - grpc_client_attempt_duration
        - googlecloudmonitoring_point_count
  groupbyattrs/application-metrics_2:
    keys:
    - namespace
    - cluster
  groupbyattrs/run-gmp-self-metrics_5:
    keys:
    - namespace
    - cluster
  metricstransform/run-gmp-self-metrics_2:
    transforms:
    - action: update
      include: otelcol_process_uptime
      new_name: agent/uptime
      operations:
      - action: toggle_scalar_data_type
      - action: add_label
        new_label: version
        new_value: run-gmp-sidecar@latest
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - version
    - action: update
      include: otelcol_process_memory_rss
      new_name: agent/memory_usage
      operations:
      - action: aggregate_labels
        aggregation_type: sum
        label_set: []
    - action: update
      include: grpc_client_attempt_duration_count
      new_name: agent/api_request_count
      operations:
      - action: update_label
        label: grpc_client_status
        new_label: state
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - state
    - action: update
      include: googlecloudmonitoring_point_count
      new_name: agent/monitoring/point_count
      operations:
      - action: toggle_scalar_data_type
      - action: aggregate_labels
        aggregation_type: sum
        label_set:
        - status
  resourcedetection/application-metrics_0:
    detectors:
    - gcp
    - env
  resourcedetection/run-gmp-self-metrics_3:
    detectors:
    - gcp
    - env
  transform/application-metrics_1:
    metric_statements:
    - context: datapoint
      statements:
      - replace_pattern(resource.attributes["service.instance.id"], "^(\\d+)$$", Concat([resource.attributes["faas.id"],
        "$$1"], ":"))
  transform/application-metrics_3:
    metric_statements:
    - context: datapoint
      statements:
      - set(resource.attributes["gcp.project.id"], attributes["project_id"]) where
        attributes["project_id"] != nil
      - delete_key(attributes, "project_id")
  transform/run-gmp-self-metrics_1:
    error_mode: ignore
    metric_statements:
    - context: metric
      statements:
      - extract_count_metric(true) where name == "grpc_client_attempt_duration"
  transform/run-gmp-self-metrics_4:
    metric_statements:
    - context: datapoint
      statements:
      - set(attributes["namespace"], "test_service")
      - set(attributes["cluster"], "__run__")
      - replace_pattern(resource.attributes["service.instance.id"], "^(\\d+)$$", Concat([resource.attributes["faas.id"],
        "$$1"], ":"))
receivers:
  prometheus/application-metrics:
    allow_cumulative_resets: true
    config:
      scrape_configs:
      - job_name: run-gmp-sidecar-0
        honor_timestamps: false
        track_timestamps_staleness: false
        scrape_interval: 1m
        scrape_timeout: 1m
        scrape_protocols:
        - OpenMetricsText1.0.0
        - OpenMetricsText0.0.1
        - PrometheusText0.0.4
        metrics_path: /metrics
        enable_compression: false
        sample_limit: 1000
        follow_redirects: false
        enable_http2: false
        relabel_configs:
        - source_labels: [__address__]
          regex: null
          target_label: service_name
          replacement: test_service
          action: replace
        - regex: null
          target_label: job
          replacement: run-run-run
          action: replace
        - source_labels: [__address__]
          regex: null
          target_label: cluster
          replacement: __run__
          action: replace
        - source_labels: [__address__]
          regex: null
          target_label: namespace
          replacement: test_service
          action: replace
        - source_labels: [__address__]
          regex: null
          target_label: instance
          replacement: "8080"
          action: replace
        static_configs:
        - targets:
          - 0.0.0.0:8080
    use_collector_start_time_fallback: true
    use_start_time_metric: true
  prometheus/run-gmp-self-metrics:
    config:
      scrape_configs:
      - job_name: run-gmp-sidecar-self-metrics
        metric_relabel_configs:
        - action: replace
          replacement: "42"
          source_labels:
          - __address__
          target_label: instance
        scrape_interval: 1m
        static_configs:
        - targets:
          - 0.0.0.0:42
service:
  pipelines:
    metrics/application-metrics:
      exporters:
      - googlemanagedprometheus
      processors:
      - resourcedetection/application-metrics_0
      - transform/application-metrics_1
      - groupbyattrs/application-metrics_2
      - transform/application-metrics_3
      receivers:
      - prometheus/application-metrics
    metrics/run-gmp-self-metrics:
      exporters:
      - googlemanagedprometheus
      processors:
      - filter/run-gmp-self-metrics_0
      - transform/run-gmp-self-metrics_1
      - metricstransform/run-gmp-self-metrics_2
      - resourcedetection/run-gmp-self-metrics_3
      - transform/run-gmp-self-metrics_4
      - groupbyattrs/run-gmp-self-metrics_5
      receivers:
      - prometheus/run-gmp-self-metrics
  telemetry:
    metrics:
      address: 0.0.0.0:42
